--- a/client/src/Havoc/Havoc.cc
+++ b/client/src/Havoc/Havoc.cc
@@ -1,3 +1,4 @@
+#include <pwd.h>
 #include <Havoc/Havoc.hpp>
 #include <Havoc/Connector.hpp>
 #include <Havoc/CmdLine.hpp>
@@ -15,8 +16,9 @@ HavocSpace::Havoc::Havoc( QMainWindow* w )
         HavocNamespace::CodeName
     );
 
+    const char *dbPath = strcat(getpwuid(getuid())->pw_dir, "/.havoc/data/client.db");
     this->HavocMainWindow = w;
-    this->dbManager = new HavocSpace::DBManager( "data/client.db", DBManager::CreateSqlFile );
+    this->dbManager = new HavocSpace::DBManager( dbPath, DBManager::CreateSqlFile );
 }
 
 void HavocSpace::Havoc::Init( int argc, char** argv )
--- a/teamserver/cmd/server.go
+++ b/teamserver/cmd/server.go
@@ -20,7 +20,8 @@
 	SilenceUsage: true,
 	RunE: func(cmd *cobra.Command, args []string) error {
 		var (
-			DirPath, _  = os.Getwd()
+			Home, _ = os.UserHomeDir()
+			DirPath = Home + "/.havoc"
 			ServerTimer = time.Now()
 			LogrPath    = "data/loot/" + ServerTimer.Format("2006.01.02._15:04:05")
 			Server      *server.Teamserver
@@ -34,7 +35,7 @@
 			os.Exit(0)
 		}
 
-		Server = server.NewTeamserver(DatabasePath)
+		Server = server.NewTeamserver(DirPath + "/" + DatabasePath)
 		Server.SetServerFlags(flags)
 
 		logr.LogrInstance = logr.NewLogr(DirPath, LogrPath)
@@ -64,7 +65,7 @@
 		logger.Info(fmt.Sprintf("Havoc Framework [Version: %v] [CodeName: %v]", VersionNumber, VersionName))
 
 		if flags.Server.Default {
-			Server.SetProfile(DirPath + "/data/havoc.yaotl")
+			Server.SetProfile("/usr/share/havoc/data/havoc.yaotl")
 		} else if flags.Server.Profile != "" {
 			Server.SetProfile(flags.Server.Profile)
 		} else {
@@ -78,7 +79,7 @@
 		}
 
 		logger.Info("Time: " + colors.Yellow(ServerTimer.Format("02/01/2006 15:04:05")))
-		logger.Info("Teamserver logs saved under: " + colors.Blue(LogrPath))
+		logger.Info("Teamserver logs saved under: " + colors.Blue(DirPath + "/" + LogrPath))
 
 		// start teamserver
 		Server.Start()
--- a/teamserver/cmd/server/teamserver.go
+++ b/teamserver/cmd/server/teamserver.go
@@ -53,7 +53,8 @@
 	var (
 		ServerFinished      chan bool
 		TeamserverWs        string
-		TeamserverPath, err = os.Getwd()
+		Home, err = os.UserHomeDir()
+		TeamserverPath = Home + "/.havoc"
 		ListenerCount       int
 		KillDate            int64
 	)
@@ -209,7 +210,7 @@
 
 	/* now load up our db or start a new one if none exist */
 	DBPath := t.DB.Path()
-	if t.DB, err = db.DatabaseNew(TeamserverPath + "/" + DBPath); err != nil {
+	if t.DB, err = db.DatabaseNew(DBPath); err != nil {
 		logger.SetStdOut(os.Stderr)
 		logger.Error("Failed to create or open a database: " + err.Error())
 		return
--- a/teamserver/pkg/logr/logr.go
+++ b/teamserver/pkg/logr/logr.go
@@ -26,18 +26,18 @@
 
 	logr.ServerPath = Server
 	logr.Path = Server + "/" + Path
-	logr.ListenerPath = Path + "/listener"
-	logr.AgentPath = Path + "/agents"
+	logr.ListenerPath = logr.Path + "/listener"
+	logr.AgentPath = logr.Path + "/agents"
 
-	if _, err = os.Stat(Path); os.IsNotExist(err) {
-		if err = os.MkdirAll(Path, os.ModePerm); err != nil {
+	if _, err = os.Stat(logr.Path); os.IsNotExist(err) {
+		if err = os.MkdirAll(logr.Path, os.ModePerm); err != nil {
 			logger.Error("Failed to create Logr folder: " + err.Error())
 			return nil
 		}
 	} else {
-		err = os.RemoveAll(Path)
+		err = os.RemoveAll(logr.Path)
 		if err == nil {
-			if err = os.MkdirAll(Path, os.ModePerm); err != nil {
+			if err = os.MkdirAll(logr.Path, os.ModePerm); err != nil {
 				logger.Error("Failed to create Logr folder: " + err.Error())
 				return nil
 			}
--- a/profiles/havoc.yaotl
+++ b/profiles/havoc.yaotl
@@ -3,8 +3,8 @@
     Port = 40056
 
     Build {
-        Compiler64 = "data/x86_64-w64-mingw32-cross/bin/x86_64-w64-mingw32-gcc"
-        Compiler86 = "data/i686-w64-mingw32-cross/bin/i686-w64-mingw32-gcc"
+        Compiler64 = "/usr/bin/x86_64-w64-mingw32-gcc"
+        Compiler86 = "/usr/bin/i686-w64-mingw32-gcc"
         Nasm = "/usr/bin/nasm"
     }
 }
